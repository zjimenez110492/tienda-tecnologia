package dominio;
//
import dominio.repositorio.RepositorioProducto;

import java.util.Calendar;
import java.util.Date;

import dominio.repositorio.RepositorioGarantiaExtendida;

public class Vendedor {

    public static final String EL_PRODUCTO_TIENE_GARANTIA = "El producto ya cuenta con una garantia extendida";

    private RepositorioProducto repositorioProducto;
    private RepositorioGarantiaExtendida repositorioGarantia;

    public Vendedor(RepositorioProducto repositorioProducto, RepositorioGarantiaExtendida repositorioGarantia) {
        this.repositorioProducto = repositorioProducto;
        this.repositorioGarantia = repositorioGarantia;
        
    }
/*
 * 
 * */  
    public void generarGarantia(String codigo) {
    	//Codigo del producto y nombre de la persona que va a comprar la garantia, 
    	//en nombre cliente de garantia extendida 
    	
    	Date fechaLimite=calcularFechafin(200);
    	
    	System.out.println("*******Fecha actual más 200 dias es:  "+fechaLimite.toString());
    	
    }
    
@SuppressWarnings("deprecation")
private Date calcularFechafin(int dias) {
	int numLunes=0;
	Date fecha= new Date();
	if (dias==0) return fecha;
	else
	{
		Calendar calendar = Calendar.getInstance();
	         
	    for(int i=0;i<dias;i++)
	    {	
	    	System.out.println("Si("+Calendar.DAY_OF_WEEK+") != "+Calendar.MONDAY);
	    	if(Calendar.DAY_OF_WEEK!=Calendar.MONDAY)
	    		{
	    		calendar.add(calendar.DAY_OF_YEAR, 1);
	    		fecha=calendar.getTime();
	    		calendar.setTime(fecha);
	    		System.out.println("Probando:  "+calendar.getTime().toString());
	    	    
	    		}
	    	else
	    		System.out.println("Es lunes..."+calendar.getTime().toString());
	    }
	    
	    //System.out.println("Hay "+numLunes+" lunes ");
	    //calendar.add(calendar.DAY_OF_YEAR, dias-numLunes);
	    return calendar.getTime(); 
		
	}
 }
	//se debe hacer un JOIN con garantías y ver si tiene garantia
    public boolean tieneGarantia(String codigo) {
    	Producto p=null;
    	double garantia;
    	int diasGarantia;
    	if(!tieneVocales(codigo))
    	{
    		p=this.repositorioGarantia.obtenerProductoConGarantiaPorCodigo(codigo);
    		System.out.println("Producto con codigo: "+codigo+"SI TIENE garantia");
    		System.out.println("Producto:  "+p.getNombre()+" Precio: "+p.getPrecio());
    		if(p.getPrecio()>500000)
    		{
    			garantia=p.getPrecio()*0.2; //Se debe almacenar en precio de GarantiaExtendida
    			diasGarantia=200;//Se debe calcular la fecha fin y almacenarla en la bd de garantiaextendida 
    		}
    	}
    	if(p==null) return false;
    	else return true;
    }
    //Si tiene 3 vocales, se debe generar una excepción con un mensaje
    public boolean tieneVocales(String codigo)
    {
    	int contador=0;
    	for(int i=0;i<codigo.length();i++) {
    		  if ((codigo.charAt(i)=='a') || (codigo.charAt(i)=='e') || (codigo.charAt(i)=='i') || (codigo.charAt(i)=='o') || (codigo.charAt(i)=='u')){
    		    contador++;
    		  }
    		}
    	return contador==3;
    }
}
